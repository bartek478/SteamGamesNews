{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barto\\\\Desktop\\\\projektos\\\\steamnews\\\\src\\\\GameDetail.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameDetail({\n  appId\n}) {\n  _s();\n  const [news, setNews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchNews = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`http://localhost:5000/api/news?appId=${appId}`);\n        if (!response.ok) throw new Error(\"Failed to fetch news\");\n        const result = await response.json();\n        setNews(result.appnews.newsitems || []);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    };\n    fetchNews();\n  }, [appId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: news.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No news available for this game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : news.map((newsItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: newsItem.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: newsItem.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n/*\r\n                    <div key={index}>\r\n                        <h3>{newsItem.title}</h3>\r\n                        <p>{newsItem.contents}</p>\r\n                    </div>\r\n*/\n_s(GameDetail, \"iWm3zq0+UW91YYKvNZYAN9fW2UU=\");\n_c = GameDetail;\nexport default GameDetail;\nvar _c;\n$RefreshReg$(_c, \"GameDetail\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","GameDetail","appId","_s","news","setNews","isLoading","setIsLoading","fetchNews","response","fetch","ok","Error","result","json","appnews","newsitems","error","console","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","newsItem","index","title","contents","_c","$RefreshReg$"],"sources":["C:/Users/barto/Desktop/projektos/steamnews/src/GameDetail.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nfunction GameDetail({ appId }){\r\n    const [news, setNews] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchNews = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/news?appId=${appId}`);\r\n                if (!response.ok) \r\n                    throw new Error(\"Failed to fetch news\");\r\n        \r\n                const result = await response.json();\r\n                setNews(result.appnews.newsitems || []);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        \r\n\r\n        fetchNews();\r\n    }, [appId]);\r\n\r\n    return (\r\n        <div>\r\n            {news.length === 0 ? (\r\n                <p>No news available for this game</p>\r\n            ) : (\r\n                news.map((newsItem, index) => (\r\n                    <div key={index}>\r\n                        <h3>{newsItem.title}</h3>\r\n                        <p>{newsItem.contents}</p>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n                    <div key={index}>\r\n                        <h3>{newsItem.title}</h3>\r\n                        <p>{newsItem.contents}</p>\r\n                    </div>\r\n*/\r\n\r\nexport default GameDetail"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,UAAUA,CAAC;EAAEC;AAAM,CAAC,EAAC;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IAEZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BD,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwCR,KAAK,EAAE,CAAC;QAC7E,IAAI,CAACO,QAAQ,CAACE,EAAE,EACZ,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAE3C,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCT,OAAO,CAACQ,MAAM,CAACE,OAAO,CAACC,SAAS,IAAI,EAAE,CAAC;QACvCT,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBV,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAGDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,oBACIF,OAAA;IAAAmB,QAAA,EACKf,IAAI,CAACgB,MAAM,KAAK,CAAC,gBACdpB,OAAA;MAAAmB,QAAA,EAAG;IAA+B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEtCpB,IAAI,CAACqB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACrB3B,OAAA;MAAAmB,QAAA,gBACInB,OAAA;QAAAmB,QAAA,EAAKO,QAAQ,CAACE;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBxB,OAAA;QAAAmB,QAAA,EAAIO,QAAQ,CAACG;MAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFpBG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACR;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;;AAEA;AACA;AACA;AACA;AACA;AACA;AALArB,EAAA,CA1CSF,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAiDnB,eAAeA,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}