{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barto\\\\Desktop\\\\projektos\\\\steamnews\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  appid\n}) {\n  _s();\n  const [news, setNews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch game news based on the appid\n  useEffect(() => {\n    async function fetchNews() {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`https://api.steampowered.com/ISteamNews/GetNewsForApp/v0002/?appid=${appid}&count=3&maxlength=300&format=json`);\n        const data = await response.json();\n        setNews(data.appnews.newsitems);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Failed to fetch news:\", error);\n        setIsLoading(false);\n      }\n    }\n    fetchNews();\n  }, [appid]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading news...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"News for Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), news.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: item.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Read more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"4kuymrl1OoUkHJbIYZCODUAtIUQ=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Game","appid","_s","news","setNews","isLoading","setIsLoading","fetchNews","response","fetch","data","json","appnews","newsitems","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","title","contents","href","url","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/barto/Desktop/projektos/steamnews/src/Game.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction Game({ appid }) {\r\n  const [news, setNews] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Fetch game news based on the appid\r\n  useEffect(() => {\r\n    async function fetchNews() {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(`https://api.steampowered.com/ISteamNews/GetNewsForApp/v0002/?appid=${appid}&count=3&maxlength=300&format=json`);\r\n        const data = await response.json();\r\n        setNews(data.appnews.newsitems);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch news:\", error);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    fetchNews();\r\n  }, [appid]);\r\n\r\n  if (isLoading) return <p>Loading news...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>News for Game</h2>\r\n      {news.map((item, index) => (\r\n        <div key={index}>\r\n          <h3>{item.title}</h3>\r\n          <p>{item.contents}</p>\r\n          <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">Read more</a>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,IAAIA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,eAAeU,SAASA,CAAA,EAAG;MACzBD,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,sEAAsER,KAAK,oCAAoC,CAAC;QAC7I,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,OAAO,CAACM,IAAI,CAACE,OAAO,CAACC,SAAS,CAAC;QAC/BP,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CR,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;IACAC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,IAAII,SAAS,EAAE,oBAAON,OAAA;IAAAiB,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE5C,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBjB,IAAI,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBxB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAKM,IAAI,CAACE;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBrB,OAAA;QAAAiB,QAAA,EAAIM,IAAI,CAACG;MAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBrB,OAAA;QAAG2B,IAAI,EAAEJ,IAAI,CAACK,GAAI;QAACC,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAb,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GAHlEG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAnCQF,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAqCb,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}