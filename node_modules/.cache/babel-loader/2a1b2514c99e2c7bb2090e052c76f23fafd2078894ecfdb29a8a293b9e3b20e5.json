{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barto\\\\Desktop\\\\projektos\\\\steamnews\\\\src\\\\GameNews.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Game from './Game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameNews() {\n  _s();\n  const [games, setGames] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`https://store.steampowered.com/api/storesearch/?term=${searchTerm}&cc=US`);\n      if (!response.ok) throw new Error(\"Failed to fetch data\");\n      const result = await response.json();\n      console.log(result.Search);\n      setMovies(result.Search);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Filter games based on the search term\n  const handleSearch = event => {\n    const value = searchTerm;\n    const filtered = games.filter(game => game.name.toLowerCase().includes(value.toLowerCase()));\n    setFilteredGames(filtered);\n  };\n\n  // When a game is clicked, set it as the selected game\n  const handleGameClick = game => {\n    setSelectedGame(game);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"search game\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearchChange,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredGames.slice(0, 10).map(game => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => handleGameClick(game),\n        children: game.name\n      }, game.appid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), selectedGame && /*#__PURE__*/_jsxDEV(Game, {\n      appid: selectedGame.appid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(GameNews, \"Z5a3THeH87TmkHve49Nt6oXq+BI=\");\n_c = GameNews;\nexport default GameNews;\nvar _c;\n$RefreshReg$(_c, \"GameNews\");","map":{"version":3,"names":["useState","useEffect","Game","jsxDEV","_jsxDEV","GameNews","_s","games","setGames","searchTerm","setSearchTerm","isLoading","setIsLoading","fetchData","response","fetch","ok","Error","result","json","console","log","Search","setMovies","error","handleSearch","event","value","filtered","filter","game","name","toLowerCase","includes","setFilteredGames","handleGameClick","setSelectedGame","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","handleSearchChange","filteredGames","slice","map","appid","selectedGame","_c","$RefreshReg$"],"sources":["C:/Users/barto/Desktop/projektos/steamnews/src/GameNews.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Game from './Game';\r\n\r\nfunction GameNews() {\r\n  const [games, setGames] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const fetchData = async () => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await fetch(`https://store.steampowered.com/api/storesearch/?term=${searchTerm}&cc=US`)\r\n            if(!response.ok)\r\n                throw new Error(\"Failed to fetch data\")\r\n\r\n            const result = await response.json()\r\n            console.log(result.Search)\r\n            setMovies(result.Search)\r\n            setIsLoading(false)\r\n        }\r\n        catch(error) {\r\n            console.log(error)\r\n        }\r\n    }   \r\n\r\n\r\n\r\n  // Filter games based on the search term\r\n  const handleSearch= (event) => {\r\n    const value = searchTerm;\r\n    const filtered = games.filter(game =>\r\n      game.name.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setFilteredGames(filtered);\r\n  };\r\n\r\n  // When a game is clicked, set it as the selected game\r\n  const handleGameClick = (game) => {\r\n    setSelectedGame(game);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Game News</h1>\r\n      <input type=\"text\" placeholder=\"search game\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)}/>\r\n      <button onClick={handleSearchChange}>Search</button>\r\n      <div>\r\n        {filteredGames.slice(0, 10).map(game => (\r\n          <p key={game.appid} onClick={() => handleGameClick(game)}>\r\n            {game.name}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      {selectedGame && <Game appid={selectedGame.appid} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameNews;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}